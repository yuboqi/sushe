{
    "sourceFile": "src/components/login.vue",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1656556048075,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1656556055211,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n <template>\n   <div class=\"login\">\n-    <h1>宿舍管理系统</h1>\n+    <h1>学生宿舍管理系统</h1>\n     <div class=\"loginBox\">\n       <!-- logo区域 -->\n       <div class=\"loginLogo\">\n         <img src=\"../assets/img/log.png\" alt />\n"
                }
            ],
            "date": 1656556048075,
            "name": "Commit-0",
            "content": "<template>\n  <div class=\"login\">\n    <h1>宿舍管理系统</h1>\n    <div class=\"loginBox\">\n      <!-- logo区域 -->\n      <div class=\"loginLogo\">\n        <img src=\"../assets/img/log.png\" alt />\n      </div>\n      <!-- 登录表单区域 -->\n      <el-form\n        :model=\"loginForm\"\n        :rules=\"rules\"\n        ref=\"loginFormRef\"\n        label-width=\"0px\"\n        class=\"login_form\"\n      >\n        <!-- 用户名 -->\n        <el-form-item prop=\"name\">\n          <el-input v-model=\"loginForm.name\" placeholder=\"请输入用户名\" prefix-icon=\"el-icon-s-custom\"></el-input>\n        </el-form-item>\n        <!-- 密码 -->\n        <el-form-item prop=\"password\">\n          <el-input\n            v-model=\"loginForm.password\"\n            placeholder=\"请输入密码\"\n            prefix-icon=\"el-icon-lock\"\n            type=\"password\"\n          ></el-input>\n        </el-form-item>\n        <!-- 登录注册按钮 -->\n        <el-form-item class=\"btns\">\n          <el-button type=\"primary\" @click=\"login\">登录</el-button>\n          <el-button type=\"info\" @click=\"reset\">重置</el-button>\n        </el-form-item>\n      </el-form>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"login\",\n  data() {\n    return {\n      //登录表单数据绑定对象\n      loginForm: {\n        name: \"\",\n        password: \"\"\n      },\n      // 登录表单数据验证规则对象\n      rules: {\n        name: [\n          { required: true, message: \"请输入登录名称\", trigger: \"blur\" },\n          { min: 3, max: 10, message: \"长度在 3 到 10 个字符\", trigger: \"blur\" }\n        ],\n        password: [\n          { required: true, message: \"请输入合法的密码\", trigger: \"blur\" }\n        ]\n      }\n    };\n  },\n  methods: {\n    // 点击重置按钮重置表单\n    reset() {\n      this.$refs.loginFormRef.resetFields();\n    },\n    // 点击登录按钮先预校验,校验成功后发起请求,请求成功跳转到首页\n    login() {\n      let _this = this;\n      this.$refs.loginFormRef.validate(valid => {\n        // 如果校验失败就返回\n        if (!valid) return;\n        // 如果校验成功发起请求\n        this.$http\n          .post(\"http://localhost:3000/login\", this.loginForm)\n          .then(function(response) {\n            console.log(response.data);\n            // 如果状态码为200，代表登录成功，0为失败\n            if (response.data.code == \"200\") {\n              // 如果存在该用户,弹出登录成功提示信息\n              _this.$message({\n                showClose: true,\n                message: \"登录成功\",\n                type: \"success\"\n              });\n              var userData = JSON.stringify(response.data.data[0]);\n              window.sessionStorage.setItem('userData',userData);\n              var a1 = response.data.route;\n              // 将请求获取到的 路由表 存到 vuex 中\n              _this.$store.commit('rolerRouter',a1)\n              // console.log(_this.$store.state.routerlist)\n              // 跳转到首页\n              _this.$router.push('/home');\n            }else{\n              // 如果不存在该用户,弹出登录失败提示信息\n              _this.$message({\n                showClose: true,\n                message: \"请检查您的用户名和密码是否正确\",\n                type: \"error\"\n              });\n              _this.loginForm.name=''\n              _this.loginForm.password=''\n            }\n          })\n          .catch(function(error) {\n            console.log(error);\n          });\n      });\n    }\n  }\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nhtml,\nbody {\n  width: 100%;\n  height: 100%;\n}\n.login {\n  width: 100%;\n  height: 100%;\n  background: url(\"../assets/img/10.jpg\") center center no-repeat;\n  background-size: 100% 100%;\n  position: relative;\n  overflow: hidden;\n}\n.login h1 {\n  text-align: center;\n  color: white;\n  font-size: 42px;\n  margin-top: 45px;\n  letter-spacing: 0.2em;\n}\n.loginBox {\n  width: 500px;\n  height: 300px;\n  border-radius: 10px;\n  background: rgba(255, 255, 255, 0.4);\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  margin-left: -250px;\n  margin-top: -150px;\n}\n.loginLogo {\n  width: 130px;\n  height: 130px;\n  background: rgba(255, 255, 255, 0.4);\n  border-radius: 50%;\n  position: absolute;\n  top: 0%;\n  left: 50%;\n  margin-left: -65px;\n  margin-top: -65px;\n}\n.loginLogo img {\n  width: 100%;\n  height: 100%;\n  border-radius: 50%;\n}\n.btns {\n  display: flex;\n  justify-content: flex-end;\n}\n.login_form {\n  position: absolute;\n  bottom: 0px;\n  width: 80%;\n  margin-left: 10%;\n}\n</style>\n"
        }
    ]
}